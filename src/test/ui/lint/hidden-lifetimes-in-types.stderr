error: hidden lifetime parameters in types are deprecated
  --> $DIR/hidden-lifetimes-in-types.rs:23:12
   |
LL | fn foo(x: &Foo) {
   |            ^^^- help: indicate the anonymous lifetime: `<'_>`
   |
note: lint level defined here
  --> $DIR/hidden-lifetimes-in-types.rs:15:9
   |
LL | #![deny(hidden_lifetimes_in_types)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^

error: hidden lifetime parameters in types are deprecated
  --> $DIR/hidden-lifetimes-in-types.rs:37:29
   |
LL | fn wrap_gift(gift: &str) -> Wrapped {
   |                             ^^^^^^^- help: indicate the anonymous lifetime: `<'_>`

error: hidden lifetime parameters in types are deprecated
  --> $DIR/hidden-lifetimes-in-types.rs:43:38
   |
LL | fn wrap_gift_with_bow(gift: &str) -> WrappedWithBow {
   |                                      ^^^^^^^^^^^^^^- help: indicate the anonymous lifetime: `<'_>`

error: hidden lifetime parameters in types are deprecated
  --> $DIR/hidden-lifetimes-in-types.rs:77:18
   |
LL |     let loyalty: Ref<(u32, char)> = honesty.borrow();
   |                  ^^^^^^^^^^^^^^^^ help: indicate the anonymous lifetime: `Ref<'_, (u32, char)>`

error: hidden lifetime parameters in types are deprecated
  --> $DIR/hidden-lifetimes-in-types.rs:69:9
   |
LL |         Ref<($($types),*)>
   |         ^^^^^^^^^^^^^^^^^^ help: indicate the anonymous lifetime: `Ref<'_, ($($types),*)>`
...
LL |     let yellow: anytuple_ref_ty!(bool, &str) = laughter.borrow();
   |                 ---------------------------- in this macro invocation

error: hidden lifetime parameters in types are deprecated
  --> $DIR/hidden-lifetimes-in-types.rs:55:36
   |
LL |         fn $fn_name(gift: &str) -> $type_name {
   |                                    ^^^^^^^^^^- help: indicate the anonymous lifetime: `<'_>`
...
LL | autowrapper!(Autowrapped, autowrap_gift, 'a);
   | --------------------------------------------- in this macro invocation

error: aborting due to 6 previous errors

